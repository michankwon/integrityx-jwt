"""Add etid field and composite unique index

Revision ID: 22edcc43e642
Revises: 207bc87ea655
Create Date: 2025-10-09 12:06:09.034789

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '22edcc43e642'
down_revision: Union[str, Sequence[str], None] = '207bc87ea655'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # For SQLite, we need to recreate the table to add a non-nullable column
    # First, add etid column as nullable
    op.add_column('artifacts', sa.Column('etid', sa.Integer(), nullable=True))
    
    # Set default etid for existing records (100001 for loan packets, 100002 for JSON)
    op.execute("UPDATE artifacts SET etid = 100001 WHERE artifact_type = 'loan_packet'")
    op.execute("UPDATE artifacts SET etid = 100002 WHERE artifact_type = 'json'")
    
    # Create the composite unique index (SQLite will handle the nullable constraint)
    op.create_index('idx_artifact_etid_payload', 'artifacts', ['etid', 'payload_sha256'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_artifact_etid_payload', table_name='artifacts')
    op.drop_column('artifacts', 'etid')
    # ### end Alembic commands ###
